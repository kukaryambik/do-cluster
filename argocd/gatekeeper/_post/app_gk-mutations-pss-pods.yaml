---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gk-mutations-pss-pods
  finalizers: ["resources-finalizer.argocd.argoproj.io"]
spec:
  destination:
    namespace: gatekeeper
    server: https://kubernetes.default.svc
  project: infra
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - Replace=true
      - FailOnSharedResource=true
    retry:
      limit: 15
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
  source:
    repoURL: "https://github.com/kukaryambik/gatekeeper-mutations-helm-chart.git"
    path: ./chart
    targetRevision: "~v0.1.0"
    helm:
      valuesObject:
        common:
          kind: Assign
          applyTo:
            - groups: [""]
              kinds: ["Pod"]
              versions: ["v1"]
          match:
            scope: Namespaced
            kinds:
              - apiGroups: ["*"]
                kinds: ["Pod"]
            labelSelector: &selector
              matchExpressions:
                - key: "iakimenko.me/pss-profile"
                  operator: NotIn
                  values: ["false"]
            namespaceSelector: *selector
            excludedNamespaces:
              - "kube-*"
              - "gatekeeper"
              - "ingress-nginx"
              - "loki"
        rules:
          ##
          ## Pod spec
          - name: pss-host-pid
            location: "spec.hostPID"
            value: false
          - name: pss-host-network
            location: "spec.hostNetwork"
            value: false
          - name: pss-host-ipc
            location: "spec.hostIPC"
            value: false
          - name: pss-share-process-namespace
            location: "spec.shareProcessNamespace"
            value: false

          ##
          ## Pod securityContext
          - name: pss-deny-sysctls
            location: "spec.securityContext.sysctls"
            value: []
            condition: MustNotExist
          - name: pss-seccomp-profile
            location: "spec.securityContext.seccompProfile.type"
            value: "RuntimeDefault"
            condition: MustNotExist
          - name: pss-run-as-non-root
            location: "spec.securityContext.runAsNonRoot"
            value: true
          - name: pss-run-as-group
            location: "spec.securityContext.runAsGroup"
            value: 65534
            condition: MustNotExist
          - name: pss-run-as-user
            location: "spec.securityContext.runAsUser"
            value: 65534
            condition: MustNotExist
          - name: pss-fs-group
            location: "spec.securityContext.fsGroup"
            value: 65534
            condition: MustNotExist
          - name: pss-supplemental-groups
            location: "spec.securityContext.supplementalGroups"
            value: [65534]
            condition: MustNotExist

          ##
          ## Container securityContext
          - name: pss-deny-privilege-escalation-ephemeralcontainer
            location: "spec.ephemeralContainers[name:*].securityContext.allowPrivilegeEscalation"
            value: false
          - name: pss-deny-privilege-escalation-initcontainer
            location: "spec.initContainers[name:*].securityContext.allowPrivilegeEscalation"
            value: false
          - name: pss-deny-privilege-escalation-containers
            location: "spec.containers[name:*].securityContext.allowPrivilegeEscalation"
            value: false

          - name: pss-deny-privileged-ephemeralcontainers
            location: "spec.ephemeralContainers[name:*].securityContext.privileged"
            value: false
          - name: pss-deny-privileged-initcontainers
            location: "spec.initContainers[name:*].securityContext.privileged"
            value: false
          - name: pss-deny-privileged-containers
            location: "spec.containers[name:*].securityContext.privileged"
            value: false

          - name: pss-readonly-root-filesystem-ephemeralcontainers
            location: "spec.ephemeralContainers[name:*].securityContext.readOnlyRootFilesystem"
            value: true
          - name: pss-readonly-root-filesystem-initcontainers
            location: "spec.initContainers[name:*].securityContext.readOnlyRootFilesystem"
            value: true
          - name: pss-readonly-root-filesystem-containers
            location: "spec.containers[name:*].securityContext.readOnlyRootFilesystem"
            value: true

          - name: pss-drop-capabilities-ephemeralcontainers
            location: "spec.ephemeralContainers[name:*].securityContext.capabilities.drop"
            value: ["ALL"]
          - name: pss-drop-capabilities-initcontainers
            location: "spec.initContainers[name:*].securityContext.capabilities.drop"
            value: ["ALL"]
          - name: pss-drop-capabilities-containers
            location: "spec.containers[name:*].securityContext.capabilities.drop"
            value: ["ALL"]

          - name: pss-run-as-non-root-ephemeralcontainers
            location: "spec.ephemeralContainers[name:*].securityContext.runAsNonRoot"
            value: true
          - name: pss-run-as-non-root-initcontainers
            location: "spec.initContainers[name:*].securityContext.runAsNonRoot"
            value: true
          - name: pss-run-as-non-root-containers
            location: "spec.containers[name:*].securityContext.runAsNonRoot"
            value: true

          - name: pss-run-as-user-ephemeralcontainers
            location: "spec.ephemeralContainers[name:*].securityContext.runAsUser"
            value: 65534
            condition: MustNotExist
          - name: pss-run-as-user-initcontainers
            location: "spec.initContainers[name:*].securityContext.runAsUser"
            value: 65534
            condition: MustNotExist
          - name: pss-run-as-user-containers
            location: "spec.containers[name:*].securityContext.runAsUser"
            value: 65534
            condition: MustNotExist

          - name: pss-run-as-group-ephemeralcontainers
            location: "spec.ephemeralContainers[name:*].securityContext.runAsGroup"
            value: 65534
            condition: MustNotExist
          - name: pss-run-as-group-initcontainers
            location: "spec.initContainers[name:*].securityContext.runAsGroup"
            value: 65534
            condition: MustNotExist
          - name: pss-run-as-group-containers
            location: "spec.containers[name:*].securityContext.runAsGroup"
            value: 65534
            condition: MustNotExist

          - name: pss-seccomp-profile-ephemeralcontainers
            location: "spec.ephemeralContainers[name:*].securityContext.seccompProfile.type"
            value: "RuntimeDefault"
            condition: MustNotExist
          - name: pss-seccomp-profile-initcontainers
            location: "spec.initContainers[name:*].securityContext.seccompProfile.type"
            value: "RuntimeDefault"
            condition: MustNotExist
          - name: pss-seccomp-profile-containers
            location: "spec.containers[name:*].securityContext.seccompProfile.type"
            value: "RuntimeDefault"
            condition: MustNotExist

          ##
          ## Vault Secret Webhook fix
          - name: pss-run-as-user-vaultfix
            location: "spec.initContainers[name: copy-vault-env].securityContext.runAsUser"
            value: 65534
            condition: MustExist
